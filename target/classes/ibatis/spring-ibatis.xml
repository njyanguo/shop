<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd  
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<context:component-scan base-package="com.shop.yi"/>
	<!-- 自动扫描 
	<context:component-scan base-package="com.shop.yi">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>-->
	
	<!-- 该 BeanPostProcessor 将自动对标注 @Autowired 的 Bean 进行注入 
	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />-->
	
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">  
           <list>  
<!--               <value>WEB-INF/classes/log4j.properties</value>   -->
              <value>WEB-INF/classes/jdbc.properties</value>  
           </list>  
       </property> 
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- 数据源的Bean事务管理器 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接大小
		<property name="initialSize" value="${initialSize}"></property> -->
		<!-- 连接池最大数量
		<property name="maxActive" value="${maxActive}"></property> -->
		<!-- 连接池最大空闲 
		<property name="maxIdle" value="${maxIdle}"></property>-->
		<!-- 连接池最小空闲
		<property name="minIdle" value="${minIdle}"></property> -->
		<!-- 获取连接最大等待时间 
		<property name="maxWait" value="${maxWait}"></property>-->
	</bean>
	

	<!-- ibatis的工厂数据源配置1 -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:ibatis/sqlMapconfig_ibatis.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--根据sqlMapClien创建一个SqlMapClient模版类 -->
	<bean id="sqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
		<property name="sqlMapClient" ref="sqlMapClient" />
	</bean>

</beans>